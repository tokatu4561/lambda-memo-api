AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  line-dynamo-lambda
  
  Sample SAM Template for line-dynamo-lambda
Description: >
  Sample function

Parameters: 
  FrontOrigin: 
    Type: String

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 5
    Tracing: Active
  Api:
    TracingEnabled: True
    Cors:
      AllowOrigin: "'https://main.d12jdcjhy5lmh.amplifyapp.com'"
      AllowCredentials: true
      AllowMethods: "'GET,POST,PUT,DELETE'"
      AllowHeaders: "'Authorization,X-XSRF-TOKEN,Content-Type,ContentType,x-amz-security-token,x-amz-date'"

Resources:
  GetTaskListFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: cmd/getTasks/
      Handler: getTasks
      Runtime: go1.x
      Architectures:
        - x86_64
      Events:
        CatchAll:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /tasks
            Method: GET
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          FRONT_ORIGIN: !Ref FrontOrigin
          DYNAMODB_ENDPOINT: ""
          TABLE_NAME: Task
      Role: !GetAtt FunctionRole.Arn
  GetTaskFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: cmd/getTask
      Handler: getTask
      Runtime: go1.x
      Architectures:
        - x86_64
      Events:
        Calc:
          Type: Api
          Properties:
            Path: /tasks/{id}
            Method: GET
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          FRONT_ORIGIN: !Ref FrontOrigin
          DYNAMODB_ENDPOINT: ""
          TABLE_NAME: Task
      Role: !GetAtt FunctionRole.Arn
  CreateTaskFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: cmd/addTask
      Handler: addTask
      Runtime: go1.x
      Architectures:
        - x86_64
      Events:
        CatchAll:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /task
            Method: POST
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          FRONT_ORIGIN: !Ref FrontOrigin
          DYNAMODB_ENDPOINT: ""
          TABLE_NAME: Task
      Role: !GetAtt FunctionRole.Arn
  UpdateTaskListFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: cmd/updateTask
      Handler: updateTask
      Runtime: go1.x
      Architectures:
        - x86_64
      Events:
        CatchAll:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /task
            Method: PUT
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          FRONT_ORIGIN: !Ref FrontOrigin
          DYNAMODB_ENDPOINT: ""
          TABLE_NAME: Task
      Role: !GetAtt FunctionRole.Arn
  DeleteTaskListFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: cmd/deleteTask
      Handler: deleteTask
      Runtime: go1.x
      Architectures:
        - x86_64
      Events:
        CatchAll:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /task
            Method: DELETE
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          FRONT_ORIGIN: !Ref FrontOrigin
          DYNAMODB_ENDPOINT: ""
          TABLE_NAME: Task
      Role: !GetAtt FunctionRole.Arn
  TaskTable:
    Type: AWS::Serverless::SimpleTable
    Properties: 
      TableName: Task
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2
  FunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service:
                - lambda.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: HelloWorldFunctionPolicies
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:List*
                  - dynamodb:DescribeReservedCapacity*
                  - dynamodb:DescribeLimits
                  - dynamodb:DescribeTimeToLive
                Resource: "*"
              - Effect: Allow
                Action:
                  - dynamodb:BatchGet*
                  - dynamodb:DescribeStream
                  - dynamodb:DescribeTable
                  - dynamodb:Get*
                  - dynamodb:Query
                  - dynamodb:Scan
                  - dynamodb:BatchWrite*
                  - dynamodb:CreateTable
                  - dynamodb:Delete*
                  - dynamodb:Update*
                  - dynamodb:PutItem
                Resource: !GetAtt TaskTable.Arn
Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  HelloWorldAPI:
    Description: "API Gateway endpoint URL for Prod environment for First Function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  HelloWorldFunction:
    Description: "First Lambda Function ARN"
    Value: !GetAtt GetTaskListFunction.Arn
  HelloWorldFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt GetTaskListFunction.Arn
